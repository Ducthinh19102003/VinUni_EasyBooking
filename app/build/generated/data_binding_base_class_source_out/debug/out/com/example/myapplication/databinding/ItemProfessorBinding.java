// Generated by view binder compiler. Do not edit!
package com.example.myapplication.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.myapplication.R;
import de.hdodenhof.circleimageview.CircleImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemProfessorBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final CircleImageView imgProfessor;

  @NonNull
  public final TextView profEmail;

  @NonNull
  public final TextView profSubjects;

  @NonNull
  public final TextView timeSlot;

  private ItemProfessorBinding(@NonNull CardView rootView, @NonNull CircleImageView imgProfessor,
      @NonNull TextView profEmail, @NonNull TextView profSubjects, @NonNull TextView timeSlot) {
    this.rootView = rootView;
    this.imgProfessor = imgProfessor;
    this.profEmail = profEmail;
    this.profSubjects = profSubjects;
    this.timeSlot = timeSlot;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemProfessorBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemProfessorBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_professor, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemProfessorBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.img_professor;
      CircleImageView imgProfessor = ViewBindings.findChildViewById(rootView, id);
      if (imgProfessor == null) {
        break missingId;
      }

      id = R.id.prof_email;
      TextView profEmail = ViewBindings.findChildViewById(rootView, id);
      if (profEmail == null) {
        break missingId;
      }

      id = R.id.prof_subjects;
      TextView profSubjects = ViewBindings.findChildViewById(rootView, id);
      if (profSubjects == null) {
        break missingId;
      }

      id = R.id.timeSlot;
      TextView timeSlot = ViewBindings.findChildViewById(rootView, id);
      if (timeSlot == null) {
        break missingId;
      }

      return new ItemProfessorBinding((CardView) rootView, imgProfessor, profEmail, profSubjects,
          timeSlot);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
