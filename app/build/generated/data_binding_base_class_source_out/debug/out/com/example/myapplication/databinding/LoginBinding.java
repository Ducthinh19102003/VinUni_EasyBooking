// Generated by view binder compiler. Do not edit!
package com.example.myapplication.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.myapplication.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class LoginBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView LoginText;

  @NonNull
  public final TextView createAccount;

  @NonNull
  public final EditText email;

  @NonNull
  public final EditText profPassword;

  @NonNull
  public final Button profRegisterBtn;

  @NonNull
  public final ProgressBar progressBar;

  private LoginBinding(@NonNull ConstraintLayout rootView, @NonNull TextView LoginText,
      @NonNull TextView createAccount, @NonNull EditText email, @NonNull EditText profPassword,
      @NonNull Button profRegisterBtn, @NonNull ProgressBar progressBar) {
    this.rootView = rootView;
    this.LoginText = LoginText;
    this.createAccount = createAccount;
    this.email = email;
    this.profPassword = profPassword;
    this.profRegisterBtn = profRegisterBtn;
    this.progressBar = progressBar;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static LoginBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static LoginBinding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup parent,
      boolean attachToParent) {
    View root = inflater.inflate(R.layout.login, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static LoginBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.LoginText;
      TextView LoginText = ViewBindings.findChildViewById(rootView, id);
      if (LoginText == null) {
        break missingId;
      }

      id = R.id.createAccount;
      TextView createAccount = ViewBindings.findChildViewById(rootView, id);
      if (createAccount == null) {
        break missingId;
      }

      id = R.id.email;
      EditText email = ViewBindings.findChildViewById(rootView, id);
      if (email == null) {
        break missingId;
      }

      id = R.id.profPassword;
      EditText profPassword = ViewBindings.findChildViewById(rootView, id);
      if (profPassword == null) {
        break missingId;
      }

      id = R.id.profRegisterBtn;
      Button profRegisterBtn = ViewBindings.findChildViewById(rootView, id);
      if (profRegisterBtn == null) {
        break missingId;
      }

      id = R.id.progressBar;
      ProgressBar progressBar = ViewBindings.findChildViewById(rootView, id);
      if (progressBar == null) {
        break missingId;
      }

      return new LoginBinding((ConstraintLayout) rootView, LoginText, createAccount, email,
          profPassword, profRegisterBtn, progressBar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
